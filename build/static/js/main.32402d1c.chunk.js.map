{"version":3,"sources":["components/Section/Section.module.css","components/Container/Container.module.css","components/FeedbackOptions/FeedbackOptions.module.css","components/Container/Container.jsx","components/FeedbackOptions/FeedbackOptions.jsx","components/Section/Section.jsx","components/Statistics/Statistics.jsx","components/Notification/Notification.jsx","App.jsx","index.js"],"names":["module","exports","Container","children","className","s","container","FeedbackOptions","options","onLeaveFeedback","map","option","button","type","id","onClick","toUpperCase","substring","Section","title","section","Statistics","good","neutral","bad","total","positivePercentage","Notification","message","App","useState","setGood","setNeutral","setBad","countTotalFeedback","percentage","Math","round","countPositiveFeedbackPercentage","objKey","Object","keys","e","target","prevGood","prevNeutral","prevBad","console","warn","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iIACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,MAAQ,yB,iBCA7DD,EAAOC,QAAU,CAAC,UAAY,+B,gBCA9BD,EAAOC,QAAU,CAAC,OAAS,kC,4ICKZC,MAJf,YAAkC,IAAbC,EAAY,EAAZA,SACnB,OAAO,qBAAKC,UAAWC,IAAEC,UAAlB,SAA8BH,K,gBCsBxBI,MAtBf,YAAwD,IAA7BC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,gBAClC,OACE,mCACGD,EAAQE,KAAI,SAAAC,GAAM,OACjB,wBAEEP,UAAWC,IAAEO,OACbC,KAAK,SACLC,GAAIH,EACJI,QAASN,EALX,SAOGE,EAAO,GAAGK,cAAgBL,EAAOM,UAAU,IANvCN,S,gBCIAO,MATf,YAAuC,IAApBC,EAAmB,EAAnBA,MAAOhB,EAAY,EAAZA,SACxB,OACE,0BAASC,UAAWC,IAAEe,QAAtB,UACE,oBAAIhB,UAAWC,IAAEc,MAAjB,SAAyBA,IACxBhB,MCmBQkB,MAxBf,YAAwE,IAAlDC,EAAiD,EAAjDA,KAAMC,EAA2C,EAA3CA,QAASC,EAAkC,EAAlCA,IAAKC,EAA6B,EAA7BA,MAAOC,EAAsB,EAAtBA,mBAC/C,OACE,qCACE,uCACQ,+BAAOJ,OAEf,0CACW,+BAAOC,OAElB,sCACO,+BAAOC,OAEd,wCACS,+BAAOC,OAEL,IAAVA,GACC,oDACqB,iCAAOC,EAAP,eCbdC,MAJf,YAAoC,IAAZC,EAAW,EAAXA,QACtB,OAAO,8BAAMA,KCsEAC,EAlEH,WAAO,IAAD,EACQC,mBAAS,GADjB,mBACTR,EADS,KACHS,EADG,OAEcD,mBAAS,GAFvB,mBAETP,EAFS,KAEAS,EAFA,OAGMF,mBAAS,GAHf,mBAGTN,EAHS,KAGJS,EAHI,KAKZC,EAAqB,WAEvB,OADcZ,EAAOC,EAAUC,GA+BzBC,EAAQS,IACRR,EA5B8B,WACpC,IAAMD,EAAQS,IACRC,EAAqB,IAAPb,EAAcG,EAClC,OAAKH,EAGEc,KAAKC,MAAMF,GAFT,EAwBkBG,GACrBC,EAASC,OAAOC,KAAK,CAACnB,OAAMC,UAASC,QAE7C,OACI,eAAC,EAAD,WACE,cAAC,EAAD,CAASL,MAAM,wBAAf,SACE,cAAC,EAAD,CACEX,QAAS+B,EACT9B,gBA3BkB,SAAAiC,GAE1B,OADeA,EAAEC,OAAT7B,IAEN,IAAK,OACHiB,GAAQ,SAAAa,GAAQ,OAAIA,EAAW,KAC/B,MACF,IAAK,UACHZ,GAAW,SAAAa,GAAW,OAAIA,EAAc,KACxC,MACF,IAAK,MACHZ,GAAO,SAAAa,GAAO,OAAIA,EAAU,KAC5B,MACF,QACEC,QAAQC,KAAK,oCAiBb,cAAC,EAAD,CAAS7B,MAAM,aAAf,SACGM,EAAQ,EACP,cAAC,EAAD,CACEH,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOA,EACPC,mBAAoBA,IAGtB,cAAC,EAAD,CAAcE,QAAQ,4BC5DlCqB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.32402d1c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__1lh3q\",\"title\":\"Section_title__l--Hb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__2y6e-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"FeedbackOptions_button__WZgEq\"};","import s from './Container.module.css';\n\nfunction Container({ children }) {\n  return <div className={s.container}>{children}</div>;\n}\n\nexport default Container;\n","import PropTypes from 'prop-types';\nimport s from './FeedbackOptions.module.css';\n\nfunction FeedbackOptions({ options, onLeaveFeedback }) {\n  return (\n    <>\n      {options.map(option => (\n        <button\n          key={option}\n          className={s.button}\n          type=\"button\"\n          id={option}\n          onClick={onLeaveFeedback}\n        >\n          {option[0].toUpperCase() + option.substring(1)}\n        </button>\n      ))}\n    </>\n  );\n}\n\nFeedbackOptions.propTypes = {\n  onLeaveFeedback: PropTypes.func.isRequired,\n};\n\nexport default FeedbackOptions;\n","import PropTypes from 'prop-types';\nimport s from './Section.module.css';\n\nfunction Section({ title, children }) {\n  return (\n    <section className={s.section}>\n      <h2 className={s.title}>{title}</h2>\n      {children}\n    </section>\n  );\n}\n\nexport default Section;\n\nSection.propTypes = {\n  title: PropTypes.string,\n};\n","import PropTypes from 'prop-types';\n\nfunction Statistics({ good, neutral, bad, total, positivePercentage }) {\n  return (\n    <>\n      <p>\n        Good: <span>{good}</span>\n      </p>\n      <p>\n        Neutral: <span>{neutral}</span>\n      </p>\n      <p>\n        Bad: <span>{bad}</span>\n      </p>\n      <p>\n        Total: <span>{total}</span>\n      </p>\n      {total !== 0 && (\n        <p>\n          Positive feedback: <span>{positivePercentage} %</span>\n        </p>\n      )}\n    </>\n  );\n}\n\nexport default Statistics;\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number,\n  positivePercentage: PropTypes.number.isRequired,\n};\n","import PropTypes from 'prop-types';\n\nfunction Notification({ message }) {\n  return <div>{message}</div>;\n}\n\nexport default Notification;\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n","import React, { useState } from 'react';\nimport Container from './components/Container/Container';\nimport FeedbackOptions from './components/FeedbackOptions/FeedbackOptions';\nimport Section from './components/Section/Section';\nimport Statistics from './components/Statistics/Statistics';\nimport Notification from './components/Notification/Notification';\n\nconst App = () => {\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\nconst countTotalFeedback = () => {\n    const total = good + neutral + bad;\n    return total;\n};\n  \nconst countPositiveFeedbackPercentage = () => {\n    const total = countTotalFeedback();\n    const percentage = (good * 100) / total;\n    if (!good) {\n      return 0;\n    }\n    return Math.round(percentage);\n};\n  \n  const handleLeaveFeedback = e => {\n    const { id } = e.target;\n    switch (id) {\n      case 'good':\n        setGood(prevGood => prevGood + 1);\n        break;\n      case 'neutral':\n        setNeutral(prevNeutral => prevNeutral + 1);\n        break;\n      case 'bad':\n        setBad(prevBad => prevBad + 1);\n        break;\n      default:\n        console.warn('There is no such feedback.');\n    }\n  };\n  \n\n    const total = countTotalFeedback();\n    const positivePercentage = countPositiveFeedbackPercentage();\n    const objKey = Object.keys({good, neutral, bad});\n\n  return (\n      <Container>\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions\n            options={objKey}\n            onLeaveFeedback={handleLeaveFeedback}\n          />\n        </Section>\n        <Section title=\"Statistics\">\n          {total > 0 ? (\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={total}\n              positivePercentage={positivePercentage}\n            ></Statistics>\n          ) : (\n            <Notification message=\"No feedback given\" />\n          )}\n        </Section>\n      </Container>\n  );\n};\n\nexport default App;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}